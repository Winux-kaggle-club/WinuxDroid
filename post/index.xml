<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Techno Hack</title>
    <link>https://thetechnohack.cf/post/</link>
    <description>Recent content in Posts on The Techno Hack</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 04 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://thetechnohack.cf/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Brutespray – Port Scanning and Automated Brute Forcing Tool</title>
      <link>https://thetechnohack.cf/post/brutespray-port-scanning-and-automated-bruteforcing-tool/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/brutespray-port-scanning-and-automated-bruteforcing-tool/</guid>
      <description>
        
          &lt;h1 id=&#34;brutespray&#34;&gt;BruteSpray&lt;/h1&gt;
&lt;p&gt;BruteSpray is an open source python tool which provides a combination of both port scanning and automated brute force attacks against scanned services.&lt;/p&gt;
&lt;p&gt;It takes the &lt;strong&gt;GNMAP/XML&lt;/strong&gt; output from an nmap scan and automatically brute forces the services running with default credentials using Medusa or use your dictionary to gain access.&lt;/p&gt;
&lt;h1 id=&#34;github-stats&#34;&gt;GitHub Stats&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/x90skysn3k/brutespray&#34;&gt;&lt;img src=&#34;https://github-readme-stats.vercel.app/api/pin/?username=x90skysn3k&amp;amp;repo=brutespray&#34; alt=&#34;GitHub Status Card&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;installing-brutespray&#34;&gt;Installing BruteSpray&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Download the &lt;code&gt;.zip&lt;/code&gt; file from GitHub and install it manually.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Or&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Run the following command to install &lt;code&gt;brutespray&lt;/code&gt; package on Kali:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;apt install brutespray
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following screenshot shows the output of the preceding command:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603125/brutespray/brutespray_installation_d3zpb7.png&#34; alt=&#34;Installing brutespray&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once it is installed, we can run the tool with the -h flag to view the list of all features and help.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;brutespray -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following screenshot shows the output of the preceding command:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603445/brutespray/brutespray_help_c4j0ey.jpg&#34; alt=&#34;BruteSpray help menu&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;how-to-do-it&#34;&gt;How to do it...&lt;/h1&gt;
&lt;p&gt;We are doing this in 2 steps :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Scanning Target&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Brute Forcing Targeted Services&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;scanning-target-&#34;&gt;Scanning Target :&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;First of all we need a target device.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Here I&#39;m using my own virtual machine as a target (IP: 192.168.1.5)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;So, let&#39;s scan this target using nmap to find out which services are currently running.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;nmap 192.168.1.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the following screenshot you can see running services of the victims machine:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603445/brutespray/nmap-services_xgqiw6.jpg&#34; alt=&#34;nmap scanning&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now we need to save this nmap output as an &lt;ins&gt;XML or GNMAP&lt;/ins&gt; file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;We are saving the nmap output as an XML file on our desktop using the following command:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;nmap 192.168.1.5 -oX /root/Desktop/scan.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You can see how this command looks alike:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603444/brutespray/nmap-scan_iu3vag.jpg&#34; alt=&#34;Saving scan output as xml file&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Now we can see that there is a file created on our desktop as &lt;strong&gt;scan.xml&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;brute-forcing-targeted-services-&#34;&gt;Brute Forcing Targeted Services :&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;To run a default brute force on all of the services that were discovered by a previously run nmap scan, we can use the following command:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;brutespray --file scan.xml --threads &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The preceding command looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603222/brutespray/brutespray_command_e7xzts.png&#34; alt=&#34;Bruteforcing using scanned output&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To run the tool on one particular service, we can use the -s flag and
define the service we want to perform a brute force attack on. In the
following example, we will use the nmap scan that was done on a host
and only check the default credentials on the FTP service:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;brutespray --file scan.xml -t &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; -s ftp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The following screenshot shows the output of the preceding
command:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612603445/brutespray/scanning_ftp_mgmjkn.jpg&#34; alt=&#34;Bruteforcing specific services&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In the screenshot, we can see that the FTP allows anonymous
login, which is why the tool gave a success output for the credentials that
were shown.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;You can also use your custom user and password list to brute force.
For that you have to use -U and -P flags.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;brutespray --file scan.xml -U username.txt -P passwords.txt -t &lt;span class=&#34;m&#34;&gt;5&lt;/span&gt; -s ftp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;tutorial-video&#34;&gt;Tutorial video&lt;/h1&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/C-CVLbSEe_g&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;br&gt;
&lt;p&gt;Practice and experiment on this tool on your own because the best ways to learn anything efficiently are – practicing and experimenting. &lt;br&gt;
If you are learning python take a deep dive and explore how this tool actually works.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>How to Install MySQL (MariaDB) on Android With Termux</title>
      <link>https://thetechnohack.cf/post/how-to-install-mysql-on-android-with-termux/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/how-to-install-mysql-on-android-with-termux/</guid>
      <description>
        
          &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Generally, smartphones are not for programming but with the rapid evolution of technology the capability of smartphone is also increasing. We can do many programming stuffs on smartphone using some applications.&lt;/p&gt;
&lt;p&gt;In this blog, we are going to use a database management system in our smartphone using termux.&lt;/p&gt;
&lt;p&gt;We cannot run Mysql effeciently on smartphone but alternatively we can use MariaDB as our database management system.
Mysql and mariadb have some similarities and differences.&lt;/p&gt;
&lt;p&gt;MariaDB is an open-source database management system, commonly used as an alternative for the MySQL in the LAMP (Linux, Apache, MySQL, PHP/Python/Perl) stack. It is intended to be a drop-in replacement for MySQL.&lt;/p&gt;
&lt;p&gt;This tutorial will explain how to install SQL(MariaDB) or MySQL command line Android.&lt;/p&gt;
&lt;p&gt;This is a very beginner friendly guide with explanary images.&lt;/p&gt;
&lt;h2 id=&#34;requirements&#34;&gt;Requirements&lt;/h2&gt;
&lt;details markdown=&#39;1&#39;&gt;&lt;summary&gt;Download Termux App [click to expand]&lt;/summary&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612001129/termux-mariadb/termux-playstore_x1cy5h.jpg&#34; alt=&#34;termux on playstore&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.termux&#34;&gt;Download Termux App&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;/details&gt;
&lt;ul&gt;
&lt;li&gt;Internet connection(for package installation)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;insstep1ins-updating-packages&#34;&gt;&lt;ins&gt;Step–1&lt;/ins&gt; Updating packages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Open termux app.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can see a greeting screen like this:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612006811/termux-mariadb/termux-home_amfpn1.jpg&#34; alt=&#34;termux-home-screen&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;apt update&lt;/code&gt; command and press enter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1611993551/termux-mariadb/apt-update-image_vmelgi.jpg&#34; alt=&#34;apt update in action&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Wait until the dollar sign appears again.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now type &lt;code&gt;apt upgrade&lt;/code&gt; and press enter.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1611993552/termux-mariadb/apt-upgrade-image_zvjl8k.jpg&#34; alt=&#34;apt upgrade in action&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It will ask you for storage permission.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Enter y and press enter.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1611993551/termux-mariadb/termux-image_zdn7k7.jpg&#34; alt=&#34;giving permission&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If this message appears:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612088080/termux-mariadb/termux-image-skip_idtovk.jpg&#34; alt=&#34;permission&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Just press enter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wait for a couple of minutes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Use &lt;code&gt;clear&lt;/code&gt; command to clear screen.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;insstep2ins-installing-mariadb-mysql&#34;&gt;&lt;ins&gt;Step–2&lt;/ins&gt; Installing MariaDB (MySQL)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;pkg install mariadb&lt;/code&gt; and press enter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612008282/termux-mariadb/install-mariadb_j0bps8.jpg&#34; alt=&#34;installing mariaDB package&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It will again ask you for storage permission.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Type y and press enter.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612008593/termux-mariadb/termux-image-2_qhkags.jpg&#34; alt=&#34;giving permission&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wait until the process completes.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;insstep3ins-getting-username-whoami&#34;&gt;&lt;ins&gt;Step–3&lt;/ins&gt; Getting username (whoami)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;whoami&lt;/code&gt; command and press enter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612009572/termux-mariadb/whoami-image-1_hrgiyh.jpg&#34; alt=&#34;whoami in action&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;It will give you a username.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy or remember that username (or id).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612009572/termux-mariadb/whoami-image-2_t6xhdu.jpg&#34; alt=&#34;username&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;insstep4ins-running-and-stoping-mariabd-sessions&#34;&gt;&lt;ins&gt;Step–4&lt;/ins&gt; Running and stoping MariaBD sessions&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;You have to use this step every time you need to run MariaDB.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Type the following command, just replace my username with yours.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;mysqld_safe -u &amp;lt;username here&amp;gt;@localhost
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612010517/termux-mariadb/mariadb-start-cmd_ntuuqo.jpg&#34; alt=&#34;starting-mariadb&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Then your screen will look like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612011419/termux-mariadb/mariadb-start-cmd-2_gz3fhw.jpg&#34; alt=&#34;starting-mariadb&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Press &lt;code&gt;ctrl+z&lt;/code&gt; (alternatively you can open another session.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612011395/termux-mariadb/mariadb-start-cmd-3_xp3iqs.jpg&#34; alt=&#34;starting-mariadb&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Then type &lt;code&gt;mariadb&lt;/code&gt; to start mariadb.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Great! mariadb is running now.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612012273/termux-mariadb/mariadb-home_rigrwh.jpg&#34; alt=&#34;mariadb home screen&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;To exit mariadb, press &lt;code&gt;ctrl+z&lt;/code&gt; or type exit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After exiting MariaDB dont forget to kill the background session completely using the below command (you can also kill sessions using pid&#39;s):&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;killall -u &amp;lt;username here&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/morphy/image/upload/v1612012839/termux-mariadb/mariadb-kill_jphgix.jpg&#34; alt=&#34;killall command in action&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Update and upgrade packages using &lt;code&gt;apt update&lt;/code&gt; &amp;amp; &lt;code&gt;apt upgrade&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Install mariadb package using &lt;code&gt;pkg install mariadb&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Start mariadb socket using &lt;code&gt;mysqld_safe -u &amp;lt;username&amp;gt;@localhost&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Run mariadb using &lt;code&gt;mariadb&lt;/code&gt; command&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Exit mariadb and then kill all background processes using &lt;code&gt;killall -u &amp;lt;username&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;If you are very lazy to type this long commands you can define some aliases in bash.bashrc file.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In this guide you installed MariaDB to act as an SQL server in android. Optionally, you also created a separate password-authenticated administrative user.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>What is Google Cloud Shell?</title>
      <link>https://thetechnohack.cf/post/what-is-google-cloud-shell/</link>
      <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/what-is-google-cloud-shell/</guid>
      <description>
        
          &lt;p&gt;If you always hesitate to install different software packages on your local system — this blog is for you.&lt;/p&gt;
&lt;p&gt;Yes, the best solution to this problem is a cloud based environment.&lt;/p&gt;
&lt;p&gt;The cloud computing market is pretty huge but we are going to talk about &lt;strong&gt;Google Cloud Platform(GCP)&lt;/strong&gt;, more specifically about Google Cloud Shell.&lt;/p&gt;
&lt;p&gt;GCP is a very big deal that&#39;s why we are just focusing on cloud shell for now.&lt;/p&gt;
&lt;h2 id=&#34;what-is-google-cloud-shell-&#34;&gt;What is Google Cloud Shell ?&lt;/h2&gt;
&lt;p&gt;Cloud Shell is an online development environment based on Google Cloud Platform (GCP).&lt;/p&gt;
&lt;p&gt;It runs on a Debian-Based virtual machine, that can be accessed with any browser, it makes it easy to manage your projects and resources without having to install them on your local system.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Basic features of google cloud shell are completely free for any user with a Google account.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;cloud-shell-console&#34;&gt;Cloud Shell Console&lt;/h2&gt;
&lt;p&gt;Cloud Shell provides you a console with two main utilities:&lt;/p&gt;
&lt;h3 id=&#34;1-cloud-shell-terminal&#34;&gt;1. Cloud Shell Terminal&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/bADt-LplQDbOD3LLXc8nB4zC5GUjV0MCieIWXOUd7j7gaHL2uDuPuZt3kYdl_KoclG4OHTQp26k=e14-w3004&#34; alt=&#34;terminal preview&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cloud Shell Terminal is a linux-based command-line tool for accessing your VM instances.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It supports multiple terminal sessions and full &lt;strong&gt;tmux&lt;/strong&gt; support.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It comes with tonnes of pre-installed tool &amp;amp; google cloud sdk.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You have full root privileges on your allocated VM and can even run sudo commands, if you need to.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;TIP&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;em&gt;You can also access the terminal form GCP mobile app(no billing needed)&lt;/em&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;&lt;span class=&#34;nowrap&#34;&gt;&lt;span class=&#34;emojify&#34;&gt;👇&lt;/span&gt;&lt;br&gt;
&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.android.apps.cloudconsole&#34;&gt;Download from playstore&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;2-cloud-shell-editor&#34;&gt;2. Cloud Shell Editor&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://lh3.googleusercontent.com/WhS3gyjmk-B3XGdOYtPsnCN6XWkbJPNk4WiTm6wF2RjjANdXcmKjzsPf6WPnvIYlWP_emz55lMYB=e14-w3004&#34; alt=&#34;editor preview&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cloud Shell Editor has a GUI environment where you can develop, build, debug &amp;amp; deploy your apps and projects&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It also supports some useful vscode extensions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It has an built-in git client. You can easily preview and commit to your repo.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;h4 id=&#34;online-development&#34;&gt;Online development&lt;/h4&gt;
&lt;p&gt;Access Cloud Console from any web browser. No need to do anything locally.&lt;/p&gt;
&lt;h4 id=&#34;free-storage&#34;&gt;Free storage&lt;/h4&gt;
&lt;p&gt;It comes with free 5GB of persistent storage as &lt;code&gt;$HOME&lt;/code&gt; directory.&lt;/p&gt;
&lt;h4 id=&#34;pre-installed-tools&#34;&gt;Pre-installed tools&lt;/h4&gt;
&lt;p&gt;It comes with many pre-installed tools such as python, java, mysql, nano, vim, emacs, gcloud SDK etc.&lt;/p&gt;
&lt;h4 id=&#34;up-to-date&#34;&gt;Up-to-date&lt;/h4&gt;
&lt;p&gt;All the pre-installed tools always stay up-to-date.&lt;/p&gt;
&lt;h4 id=&#34;built-in-git-client&#34;&gt;Built-in git client&lt;/h4&gt;
&lt;p&gt;Cloud Shell Editor has a built-in git client. You can manage your repository and project easily.&lt;/p&gt;
&lt;h2 id=&#34;limitations--restrictions&#34;&gt;Limitations &amp;amp; restrictions&lt;/h2&gt;
&lt;h4 id=&#34;custom-packages&#34;&gt;Custom packages&lt;/h4&gt;
&lt;p&gt;You can only install custom packages in &lt;code&gt;$HOME&lt;/code&gt; directory. All the packages outside &lt;code&gt;$HOME&lt;/code&gt; directory will lost after an hour of inactivity.&lt;/p&gt;
&lt;h4 id=&#34;vs-code-extensions&#34;&gt;VS code extensions&lt;/h4&gt;
&lt;p&gt;You can not install any additional vs code extension on cloud shell editor but it comes with all essential extensions.&lt;/p&gt;
&lt;h4 id=&#34;private-browsing--disabled-third-party-cookies&#34;&gt;Private browsing &amp;amp; disabled third-party cookies&lt;/h4&gt;
&lt;p&gt;You can not use cloud console if you are using private browser or third-party cookies are disabled in your browser&lt;/p&gt;
&lt;h4 id=&#34;coin-mining--network-scanning&#34;&gt;Coin mining &amp;amp; network scanning&lt;/h4&gt;
&lt;p&gt;Coin mining and network scanning using Cloud Shell are strictly prohibited. If you do such things your account may be disabled forever.&lt;/p&gt;
&lt;h4 id=&#34;weekly-usage-limit&#34;&gt;Weekly usage limit&lt;/h4&gt;
&lt;p&gt;Cloud Shell also has a weekly usage limit. If you reach your usage limit, you&#39;ll have to wait.&lt;/p&gt;
&lt;h4 id=&#34;cloud-shell-inactivity&#34;&gt;Cloud shell inactivity&lt;/h4&gt;
&lt;p&gt;If you do not access Cloud Shell for 120 days, your home disk will be deleted. You will be informed with email before resetting your &lt;code&gt;$HOME&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;I&#39;m also a new user of GCP and still struggling to learn its features.&lt;/p&gt;

        
      </description>
    </item>
    
    <item>
      <title>The History of &#39;Hello, world!&#39;</title>
      <link>https://thetechnohack.cf/post/hello-world/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://thetechnohack.cf/post/hello-world/</guid>
      <description>
        
          &lt;h2 id=&#34;hello-world&#34;&gt;Hello, world!&lt;/h2&gt;
&lt;p&gt;Traditionally, &#39;Hello, world!&#39; programs are used to illustrate how the process of coding works, as well as to ensure that a language or system is operating correctly.&lt;/p&gt;
&lt;p&gt;They are usually the first programs that new coders learn, because even those with little or no experience can execute &#39;Hello, world!&#39; both easily and correctly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&#39;Hello, world!&#39; is usually used as the first example for any programming language.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &#39;Hello, world!&#39; program is used to check whether the codes are executing correctly or not.
If &#39;Hello, world!&#39; does not work effectively within the framework, then it is likely that other, more complex programs will also fail.&lt;/p&gt;
&lt;h2 id=&#34;history&#34;&gt;History&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Hello_World_Brian_Kernighan_1978.jpg/220px-Hello_World_Brian_Kernighan_1978.jpg&#34; alt=&#34;&#39;Hello, World!&#39; program by Brian Kernighan (1978)&#34;&gt;&lt;/p&gt;
&lt;p&gt;Though the origins of Hello World remain somewhat unclear, the tradition of using the phrase &amp;quot;Hello, world!&amp;quot; as a test message was influenced by an example program in the seminal 1978 book &lt;a href=&#34;https://archive.org/details/TheCProgrammingLanguageFirstEdition/page/n143/mode/2up&#34;&gt;The C Programming Language&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The example program in that book prints &amp;quot;Hello, world!&amp;quot;, and was inherited from a 1974 Bell Laboratories internal memorandum by &lt;strong&gt;Brian Kernighan&lt;/strong&gt;, Programming in C: A Tutorial.&lt;/p&gt;
&lt;h2 id=&#34;hello-world-in-different-programming-languages&#34;&gt;&#39;Hello, world!&#39; in different programming languages&lt;/h2&gt;
&lt;p&gt;Here’s what the code for Hello World looks like in some of the most popular programming languages currently in use.&lt;/p&gt;
&lt;h3 id=&#34;python-3&#34;&gt;Python 3&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;java&#34;&gt;Java&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloWorld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;c&#34;&gt;C#&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c#&#34; data-lang=&#34;c#&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Program&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Console&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;WriteLine&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ruby&#34;&gt;Ruby&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;puts&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;scala&#34;&gt;Scala&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scala&#34; data-lang=&#34;scala&#34;&gt;&lt;span class=&#34;ln&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;object&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloWorld&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;App&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, world!&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;ln&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With the increasing complexity of modern coding languages, Hello World is more important than ever. Both as a test and a teaching tool, it has become a standardized way of allowing programmers to configure their environment.&lt;/p&gt;
&lt;p&gt;No one can be sure why Hello World has stood the test of time in an industry known for rapid-fire innovation, but it is here to stay.&lt;/p&gt;
&lt;p&gt;By the way, in which program language you have written your first &#39;Hello, world!&#39; program. Mine was &lt;code&gt;helloworld.py&lt;/code&gt;.&lt;/p&gt;

        
      </description>
    </item>
    
  </channel>
</rss>
